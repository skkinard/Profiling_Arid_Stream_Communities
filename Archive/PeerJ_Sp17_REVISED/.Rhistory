# Load Packages
library(BiodiversityR)
library(ggsci)
library(ggrepel)
library(ggforce)
library(ade4)
library(adegraphics)
library(adespatial)
library(cocorresp)
library(MASS)
library(ellipse)
library(FactoMineR)
library(rrcov)
library(tidyverse)
# Source additional functions
source("sp17_r_source_files\\hcoplot.R")
source("sp17_r_source_files\\triplot.rda.R")
source("sp17_r_source_files\\plot.lda.R")
source("sp17_r_source_files\\polyvars.R")
source("sp17_r_source_files\\screestick.R")
# Load Data
env <- read.csv("sp17_data_files/sp17_site_x_env.csv")
invert <- read.csv("sp17_data_files/sp17_site_x_invert.csv")
setwd("C:\\Users\\s2kin\\Dropbox\\Research\\Manuscipts\\Diss.2_Gradient\\PeerJ_Sp17_REVISED\\")
# Load Data
env <- read.csv("sp17_data_files/sp17_site_x_env.csv")
invert <- read.csv("sp17_data_files/sp17_site_x_invert.csv")
# cleaning up data frames to include only the a priori selected variables and community abundance matrix
(env <- select(env, STAID, AP, flash.index, LFPP, NH4., log.cond, Rosgen.Index))
invert <- select(invert, STAID, ALISOTRICHIA:VALVATA)
# Merge frames by STAID to ensure same order of sites (rows)
mster <- merge(env,invert, by = "STAID")
# script generated by the BiodiversityR GUI from the constrained ordination menu
invert.Hellinger <- disttransform(select(mster, ALISOTRICHIA:VALVATA), method='hellinger')
Ordination.model2 <- rda(invert.Hellinger ~ .,data=env, scaling="species")
summary(Ordination.model2)
# This can be plotted via ordiplot
plot2 <- ordiplot(Ordination.model2, choices=c(1,2))
# information on the locations of sites (circles in the ordiplot) is obtained via function sites.long.
sites.long2 <- sites.long(plot2, env.data=mster[,2:7])
head(sites.long2)
# Information on species is extracted by function species.long.
species.long2 <- species.long(plot2)
species.long2
axis.long2 <- axis.long(Ordination.model2, choices=c(1, 2))
axis.long2
plot_irda <- ggplot() +
geom_vline(xintercept = c(0), color = "grey70", linetype = 2) +
geom_hline(yintercept = c(0), color = "grey70", linetype = 2) +
xlab(axis.long2[1, "label"]) +
ylab(axis.long2[2, "label"]) +
scale_x_continuous(sec.axis = dup_axis(labels=NULL, name=NULL)) +
scale_y_continuous(sec.axis = dup_axis(labels=NULL, name=NULL)) +
geom_point(data=sites.long2,
aes(x=axis1, y=axis2, colour=AP),
size=6) +
geom_point(data=species.long2,
aes(x=axis1, y=axis2)) +
scale_colour_viridis_c(direction=-1) +
coord_fixed(ratio=1) +
theme_classic() +
theme(text = element_text(size = 16)) +
theme(axis.text = element_text(size = 16)) +
theme(axis.title = element_text(size = 20))
plot_irda
spec.envfit <- envfit(plot2, env=invert.Hellinger)
spec.data.envfit <- data.frame(r=spec.envfit$vectors$r, p=spec.envfit$vectors$pvals)
species.long2 <- species.long(plot2, spec.data=spec.data.envfit)
species.long2
# Species are selected that have a statistically significant p-value
species.long3 <- species.long2[species.long2$p <= 0.05, ]
species.long3
?rda()
